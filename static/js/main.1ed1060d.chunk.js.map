{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","STAP_MOVE","getMaxMove","length","ulStyle","width","useState","move","setMove","liStyle","transition","transform","className","style","map","img","i","src","alt","parseInt","slice","type","onClick","maxMove","newMove","App","state","this","htmlFor","name","id","placeholder","value","onChange","e","setState","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ed1060d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite = false,\n}) => {\n  const STAP_MOVE = step * itemWidth;\n  const getMaxMove = () => images.length * itemWidth - STAP_MOVE;\n\n  const ulStyle = { width: `${frameSize * itemWidth}px` };\n\n  const [move, setMove] = useState(0);\n\n  const liStyle = {\n    transition: `${animationDuration}ms`,\n    transform: `translateX(${move}px)`,\n  };\n\n  const handelPrev = () => {\n    const maxMove = getMaxMove();\n\n    if (infinite && move >= 0) {\n      setMove(-maxMove);\n    }\n\n    if (move < 0) {\n      const newMove = move + STAP_MOVE;\n\n      if (newMove <= 0) {\n        setMove(newMove);\n      } else {\n        setMove(0);\n      }\n    }\n  };\n\n  const handleNex = () => {\n    const maxMove = getMaxMove();\n\n    if (infinite && move <= -maxMove) {\n      setMove(0);\n    }\n\n    if (move > -maxMove) {\n      const newMove = move - STAP_MOVE;\n\n      if (newMove >= -maxMove) {\n        setMove(newMove);\n      } else {\n        setMove(-maxMove);\n      }\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={ulStyle}\n      >\n        {images.map((img, i) => (\n          <li\n            key={parseInt(img.slice(6), 10)}\n            style={liStyle}\n            className=\"Carousel__item\"\n          >\n            <img\n              src={img}\n              alt={`${i + 1}`}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={handelPrev}\n      >\n        Prev\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"next\"\n        onClick={handleNex}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <label htmlFor=\"itemId\">\n          <h3>Write itemWidth</h3>\n        </label>\n\n        <input\n          type=\"number\"\n          name=\"itemWidth\"\n          id=\"itemId\"\n          placeholder=\"item width\"\n          value={itemWidth}\n          onChange={(e) => {\n            this.setState({ itemWidth: +e.target.value });\n          }}\n        />\n\n        <label htmlFor=\"frameId\">\n          <h3>Write Frame Sise</h3>\n        </label>\n\n        <input\n          type=\"number\"\n          name=\"frameSize\"\n          id=\"frameId\"\n          placeholder=\"frame size\"\n          value={frameSize}\n          onChange={(e) => {\n            this.setState({ frameSize: +e.target.value });\n          }}\n        />\n\n        <label htmlFor=\"stepId\">\n          <h3>Write step</h3>\n        </label>\n\n        <input\n          type=\"number\"\n          name=\"step\"\n          placeholder=\"step\"\n          id=\"stepId\"\n          value={step}\n          onChange={(e) => {\n            this.setState({ step: +e.target.value });\n          }}\n        />\n\n        <label htmlFor=\"animationDurationID\">\n          <h3>Write Animation Duration</h3>\n        </label>\n\n        <input\n          type=\"number\"\n          name=\"animationDuration\"\n          id=\"animationDurationID\"\n          placeholder=\"animation duration ms\"\n          value={animationDuration}\n          onChange={(e) => {\n            this.setState({ animationDuration: +e.target.value });\n          }}\n        />\n\n        <Carousel\n          images={images}\n          step={+step}\n          frameSize={+frameSize}\n          itemWidth={+itemWidth}\n          animationDuration={+animationDuration}\n          infinite={!false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}